id: deepwive_v1_deepwive_v1_sink
label: Deepwive v1 Sink
category: '[deepwive_v1]'

templates:
  imports: import deepwive_v1
  make: |-
    deepwive_v1.deepwive_v1_sink(${source_fn}, ${model_cout},
    ${key_decoder_fn}, ${interp_decoder_fn},
    ${packet_len}, ${snr}, ${num_chunks}, ${gop_size}, ${patience},
    ${plot_performance}, ${use_fp16})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: source_fn
  label: Source (video) file
  dtype: string

- id: key_decoder_fn
  label: Key decoder engine
  dtype: string

- id: interp_decoder_fn
  label: Interp decoder engine
  dtype: string

- id: model_cout
  label: Codeword cout
  dtype: int

- id: snr
  label: SNR of model
  dtype: float

- id: packet_len
  label: Packet length
  dtype: int

- id: num_chunks
  label: Number of BW chunks
  dtype: int

- id: gop_size
  label: GoP size
  dtype: int

- id: patience
  label: Init Patience
  dtype: int

- id: plot_performance
  label: Plot SNR v PSNR
  dtype: bool

- id: use_fp16
  label: Use FP16 precision
  dtype: bool

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: pdu_in
  domain: message
  # dtype: ...
  # vlen: ...
  # optional: ...

# outputs:
# - label: ...
#   domain: ...
#   dtype: ...
#   vlen: ...
#   optional: ...

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
